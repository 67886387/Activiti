language: java
sudo: required
jdk:
  - openjdk8
  - openjdk11
  

cache:
  directories:
    - ${HOME}/.m2/repository

services:
  - docker

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/4eabeeadee998a77068b
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always

branches:
  only:
    - master
    - develop

before_script:
  - echo MAVEN_OPTS=-Xmx1536m > ~/.mavenrc
  - curl -Ls https://github.com/jenkins-x/jx-release-version/releases/download/v1.0.24/jx-release-version_1.0.24_linux_amd64.tar.gz|  tar xvz -C . 
  - curl -Ls -o updatebot.jar   https://repo1.maven.org/maven2/io/jenkins/updatebot/updatebot/1.1.53/updatebot-1.1.53.jar 
  - sudo cp jx-release-version /usr/bin/jx-release-version
  - sudo cp updatebot.jar  /usr/bin/updatebot.jar
  - echo "java -jar /usr/bin/updatebot.jar" > updatebot
  - sudo cp updatebot  /usr/bin/updatebot
  - sudo chmod a+x /usr/bin/updatebot
  - echo $(jx-release-version) > VERSION

stages:
  - name: verify
  - name: tag
    if: type != pull_request
  - name: deploy
    if: type != pull_request
  - name: updatebot
    if: type != pull_request

jobs:
  include:
    - name: Verify build
      stage: verify
      script:
        - mvn verify -B
    
    - name: Create a tag
      stage: tag
      script: |
       mvn versions:set -DnewVersion=$(cat VERSION)
       mvn clean
       git add --all
       git commit -m "Release $(cat VERSION)" --allow-empty
       git tag -fa v$(cat VERSION) -m "Release version $(cat VERSION)"
       git push origin v$(cat VERSION)
    
    - name: Deploy to nexus
      stage: deploy
      script:
       - mvn clean deploy -DskipTests
    
    - name: Update versions in other components 
      stage: updatebot
      script:
       - export VERSION=$(cat VERSION)| make updatebot/push-version

# Send coverage data
after_success:
  bash <(curl -s https://codecov.io/bash)

after_failure:
  - cat **/target/surefire-reports/*.xml | grep -B 1 -A 10 "<error"
  - cat **/target/failsafe-reports/*.xml | grep -B 1 -A 10 "<error"
